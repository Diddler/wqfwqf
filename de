local Mercury = loadstring(game:HttpGet("https://raw.githubusercontent.com/deeeity/mercury-lib/master/src.lua"))()

local mouse = game.Players.LocalPlayer:GetMouse()
getrenv()._G.ask("Notification!","Check the Updates Tab")


local GUI = Mercury:Create{
    Name = "Mercury",
    Size = UDim2.fromOffset(600, 400),
    Theme = Mercury.Themes.Dark,
    Link = "https://github.com/deeeity/mercury-lib"
}
---- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide

--game:GetService("ReplicatedStorage").Reroll:InvokeServer()
local Tab = GUI:Tab({
	Name = "Autofarm",
	Icon = "rbxassetid://7072705757",
	PremiumOnly = false
})

local Tab2 = GUI:Tab({
	Name = "Misc",
	Icon = "rbxassetid://7072707647",
	PremiumOnly = false
})

local Tab3 = GUI:Tab({
	Name = "Spinning",
	Icon = "rbxassetid://7072715646",
	PremiumOnly = false
})

local Tab4 = GUI:Tab({
	Name = "Updates",
	Icon = "rbxassetid://7072717857",
	PremiumOnly = false
})

Tab:Toggle({
	Name = "Enabled",
	StartingState = false,
	Color = Color3.fromRGB(107, 255, 203),
	Flag = "Autofarm"
})

Tab:Toggle({
	Name = "Energy Blade Mode (Don't enable if you don't have it)",
	Default = false,
	Color = Color3.fromRGB(107, 255, 203),
	Flag = "Energy"
})

Tab:Toggle({
	Name = "Freeze NPC",
	Default = false,
	Color = Color3.fromRGB(107, 255, 203),
	Flag = "Freeze"
})

Tab2:Toggle({
	Name = "Punch Kill-Aura",
	Default = false,
	Color = Color3.fromRGB(107, 255, 203),
	Flag = "Aura"
})

Tab2:Toggle({
	Name = "Energy Blade Kill-Aura (Need EB)",
	Default = false,
	Color = Color3.fromRGB(107, 255, 203),
	Flag = "EnergyAura"
})

local auradistance
Tab2:Slider({
	Name = "Kill-Aura Distance",
	Min = 5,
	Max = 20,
	Default = 10,
	Color = Color3.fromRGB(107, 255, 203),
	Increment = 1,
	ValueName = "",
	Callback = function(Value)
		auradistance = Value
	end    
})

Tab2:Textbox("Kinda empty, maybe i'll be adding more things")

local relicname
Tab3:AddTextbox({
	Name = "Relic Name",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
		relicname = Value
	end
})

local fistname
Tab3:Textbox({
	Name = "Fist Name",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
		fistname = Value
	end
})

Tab3:Toggle({
	Name = "Relic Spin",
	Default = false,
	Color = Color3.fromRGB(107, 255, 203),
	Flag = "Relic"
})

Tab3:Toggle({
	Name = "Fist Spin",
	Default = false,
	Color = Color3.fromRGB(107, 255, 203),
	Flag = "Fist"
})

Tab3:Button({
	Name = "Ability Spin",
	Callback = function()
      	game:GetService("ReplicatedStorage").Reroll:InvokeServer()
  	end    
})

Tab4:Label("Reworked the way autofarm works")
Tab4:Label("Made crashing rarer (+chances to crash with energy blade mode)")
Tab4:Label("Working in a boss autofarm atm")
Tab4:Label("Credits: Scripting: ZCute - UI Library: Orion Library (shlex)")
Tab4:Label("Shaddow#5884 DM if you find any bug")

local questnpcs = {}
local quest
local firstselect = true
Tab:Dropdown({
	Name = "Select Quest",
	Default = "Orientation (Quest 1)",
	Items = {"Orientation (Quest 1)", "Plz Help (Quest 2)","Enforce Hierarchy (Quest 3)","Authoritarian (Quest 4)"},
	Callback = function(Value)
	    questnpcs = {}
		if Value == "Orientation (Quest 1)" then
		     table.insert(questnpcs,"Cripple")
		     quest = "Orientation"
		elseif
	       Value == "Plz Help (Quest 2)" then
	         table.insert(questnpcs,"Crail")
	         quest = "Plz Help"
	    elseif Value == "Enforce Hierarchy (Quest 3)" then
             table.insert(questnpcs,"Isen")
             table.insert(questnpcs,"Zeke")
             quest = "Enforce Hierarchy"
        elseif Value == "Authoritarian (Quest 4)" then
             table.insert(questnpcs,"Blyke")
             table.insert(questnpcs,"Remi")
             quest = "Authoritarian"
        end
        firstselect = false
	table.foreach(questnpcs,print)
	end    
})

local distance
Tab:Slider({
	Name = "Distance",
	Min = 3,
	Max = 10,
	Default = 3,
	Color = Color3.fromRGB(107, 255, 203),
	Increment = 1,
	ValueName = "",
	Callback = function(Value)
		distance = Value
	end    
})

local player = game.Players.LocalPlayer
local function tp(pos)
    local tween = game:GetService("TweenService"):Create(
        game.Players.LocalPlayer.Character.HumanoidRootPart, 
        TweenInfo.new((player.Character.HumanoidRootPart.Position - pos.Position).magnitude / 15, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 0, false, 0), 
        {CFrame = pos}
    )

    tween:Play()

    local completed
    tween.Completed:Connect(function()
        completed = true
    end)
    
    while not completed do
        if player.Character.Humanoid.Health <= 0 or not OrionLib.Flags["Autofarm"].Value then tween:Cancel() break end
        task.wait()
    end
end

local function checkrelic(relic)
    for i,v in pairs(game:GetService("HttpService"):JSONDecode(game.Players.LocalPlayer.Stats.Value).Relics) do
    for i,v in pairs(v) do
        if string.find(v,relic) then
            return true
        end
    end
end
return false
end

local function checkfist(fistc)
    for i,v in pairs(game:GetService("HttpService"):JSONDecode(game.Players.LocalPlayer.Stats.Value).Fists) do
    for i,v in pairs(v) do
        if string.find(v,fistc) then
            return true
        end
    end
end
return false
end

local function punch(v)
game:GetService("ReplicatedStorage").Punch:FireServer(v.Humanoid, 1, game.Players.LocalPlayer.Character.Cancellations.Value, nil, 3)
wait(.15)
game:GetService("ReplicatedStorage").Punch:FireServer(v.Humanoid, 2, game.Players.LocalPlayer.Character.Cancellations.Value, nil, 3)
wait(.15)
game:GetService("ReplicatedStorage").Punch:FireServer(v.Humanoid, 3, game.Players.LocalPlayer.Character.Cancellations.Value, nil, 3)
wait(.15)
game:GetService("ReplicatedStorage").Punch:FireServer(v.Humanoid, 4, game.Players.LocalPlayer.Character.Cancellations.Value, nil, 3)
wait(.15)
game:GetService("ReplicatedStorage").Punch:FireServer(v.Humanoid, 5, game.Players.LocalPlayer.Character.Cancellations.Value, nil, 3)
end

local function checkbarrier()
        for i,v in pairs(workspace:GetChildren()) do
            if v.Name == "Barrier" and v:FindFirstChild("Owner") and v.Owner.Value == "Arlo" then
                return true
            end
        end
    return false
end

local function getbarrier()
    for i,v in pairs(workspace:GetChildren()) do
            if v.Name == "Barrier" and v:FindFirstChild("Owner") and v.Owner.Value == "Arlo" then
                return v
            end
    end
    return nil
end

spawn(function()
    while true do
        if OrionLib.Flags["Autofarm"].Value then
        pcall(function()
                    local nearmob,dist = nil, math.huge
        for _, v in next, game:GetService("Workspace"):GetDescendants() do
        if (table.find(questnpcs,v.Name) and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0) then
            local magnitude = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).Magnitude
            if (magnitude < dist) then
                nearmob, dist = v, magnitude
            end
        end
        end
        if not game.Players.LocalPlayer.Character.Head:FindFirstChild("RightGlow") then
            game:GetService("ReplicatedStorage").ToggleAbility:InvokeServer(true)
        end
            if not game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Quest.Visible then
        game:GetService("ReplicatedStorage").TakeQuest:FireServer(quest)
        elseif game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Quest.Visible and game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Quest.Folder.Objective.progress.Text:split("/")[1] == game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Quest.Folder.Objective.progress.Text:split("/")[2] then
        game:GetService("ReplicatedStorage").TakeQuest:FireServer("Completed")
        end
        --game:GetService("ReplicatedStorage").TakeQuest:FireServer("Completed")
        if (nearmob) then
                --pcall(function()
                    if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") and game.Players.LocalPlayer.Character.Humanoid.Health > 0 then
                        if not game.Players.LocalPlayer.Character.Head:FindFirstChild("RightGlow") then
                        game:GetService("ReplicatedStorage").ToggleAbility:InvokeServer(true)
                        end
                        tp(nearmob.HumanoidRootPart.CFrame - nearmob.HumanoidRootPart.CFrame.lookVector * distance)
                        if OrionLib.Flags["Freeze"].Value then
                        nearmob.HumanoidRootPart.Anchored = true
                        end
                        if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - nearmob.HumanoidRootPart.Position).Magnitude < distance + 5 then
                        --game:GetService('VirtualInputManager'):SendMouseButtonEvent(0,0,0,true,nil,1)
                        --wait()
                        --game:GetService('VirtualInputManager'):SendMouseButtonEvent(0,0,0,false,nil,1)
                        --punch(nearmob)
                        if OrionLib.Flags["Energy"].Value then
                        game:GetService("ReplicatedStorage").Damage:FireServer("DualSwordHeavy", nearmob.Humanoid, game.Players.LocalPlayer.Character.Cancellations.Value,{[1] = nearmob.Humanoid})
                        
                        else
                          punch(nearmob)  
                        end
                        end
                    else
                        for i,v in pairs(workspace:GetChildren()) do
                            if v:FindFirstChild("HumanoidRootPart") and v.HumanoidRootPart.Anchored then
                                v.HumanoidRootPart.Anchored = false
                            end
                        end
                        end
                --end)
    end
        end)
        end
        wait()
    end
end)

spawn(function()
        game:GetService('RunService').Stepped:connect(function()
    pcall(function()
        if OrionLib.Flags["Autofarm"].Value then
            game.Players.LocalPlayer.Character.Head.name:Remove()
             game.Players.LocalPlayer.Character.Head.hpbar:Remove()
             game.Players.LocalPlayer.Character.Head.Jack:Remove()
             game.Players.LocalPlayer.Character.Head.King:Remove()
        for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
            if v.ClassName == "Part" or v.ClassName == "MeshPart" then
                v.CanCollide = false
            end
        end
        end
    end)
    end)
end)


local runservice = game:GetService("RunService")
spawn(function()
runservice.Heartbeat:Connect(function()
     pcall(function()
        if OrionLib.Flags["EnergyAura"].Value then
         for i,v in pairs(workspace:GetChildren()) do
             if v.Name ~= game.Players.LocalPlayer.Name and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v.PrimaryPart ~= nil and (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.PrimaryPart.Position).Magnitude < auradistance then
        game:GetService("ReplicatedStorage").Damage:FireServer("DualSwordHeavy", v.Humanoid, game.Players.LocalPlayer.Character.Cancellations.Value,{[1] = v.Humanoid})
        end
        end
end
end)
end)
end)


spawn(function()
    game:GetService('RunService').Stepped:connect(function()
        if OrionLib.Flags["Autofarm"].Value then
            pcall(function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
            end)
        end
    end)
end)

OrionLib:Init()
local Sound = Instance.new("Sound")
Sound.SoundId = "rbxassetid://4835664238"
Sound.Parent = workspace
Sound:Play()
